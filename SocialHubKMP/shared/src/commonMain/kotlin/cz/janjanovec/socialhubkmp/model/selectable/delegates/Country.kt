package cz.janjanovec.socialhubkmp.model.selectable.delegates

import cz.janjanovec.socialhubkmp.model.selectable.Selectable

data class Country(
    val isoCode: String,
    val name: String,
    val flag: String,
    val phonePrefix: String
): Selectable {
    override val id: String
        get() = isoCode
    override val listIcon: String
        get() = flag
    override val listTitle: String
        get() = name
    override val listDescription: String?
        get() = null
    override val onSelectedColor: String?
        get() = null
}

object CountryHelper {
    private val countries = listOf(
        // Europe
        Country("cz", "Czech Republic", "ğŸ‡¨ğŸ‡¿", "+420"),
        Country("sk", "Slovakia", "ğŸ‡¸ğŸ‡°", "+421"),
        Country("de", "Germany", "ğŸ‡©ğŸ‡ª", "+49"),
        Country("at", "Austria", "ğŸ‡¦ğŸ‡¹", "+43"),
        Country("pl", "Poland", "ğŸ‡µğŸ‡±", "+48"),
        Country("hu", "Hungary", "ğŸ‡­ğŸ‡º", "+36"),
        Country("fr", "France", "ğŸ‡«ğŸ‡·", "+33"),
        Country("it", "Italy", "ğŸ‡®ğŸ‡¹", "+39"),
        Country("es", "Spain", "ğŸ‡ªğŸ‡¸", "+34"),
        Country("pt", "Portugal", "ğŸ‡µğŸ‡¹", "+351"),
        Country("gb", "United Kingdom", "ğŸ‡¬ğŸ‡§", "+44"),
        Country("ie", "Ireland", "ğŸ‡®ğŸ‡ª", "+353"),
        Country("be", "Belgium", "ğŸ‡§ğŸ‡ª", "+32"),
        Country("nl", "Netherlands", "ğŸ‡³ğŸ‡±", "+31"),
        Country("dk", "Denmark", "ğŸ‡©ğŸ‡°", "+45"),
        Country("se", "Sweden", "ğŸ‡¸ğŸ‡ª", "+46"),
        Country("no", "Norway", "ğŸ‡³ğŸ‡´", "+47"),
        Country("fi", "Finland", "ğŸ‡«ğŸ‡®", "+358"),
        Country("ee", "Estonia", "ğŸ‡ªğŸ‡ª", "+372"),
        Country("lv", "Latvia", "ğŸ‡±ğŸ‡»", "+371"),
        Country("lt", "Lithuania", "ğŸ‡±ğŸ‡¹", "+370"),
        Country("by", "Belarus", "ğŸ‡§ğŸ‡¾", "+375"),
        Country("ua", "Ukraine", "ğŸ‡ºğŸ‡¦", "+380"),
        Country("ru", "Russia", "ğŸ‡·ğŸ‡º", "+7"),
        Country("md", "Moldova", "ğŸ‡²ğŸ‡©", "+373"),
        Country("ro", "Romania", "ğŸ‡·ğŸ‡´", "+40"),
        Country("bg", "Bulgaria", "ğŸ‡§ğŸ‡¬", "+359"),
        Country("gr", "Greece", "ğŸ‡¬ğŸ‡·", "+30"),
        Country("tr", "Turkey", "ğŸ‡¹ğŸ‡·", "+90"),
        Country("hr", "Croatia", "ğŸ‡­ğŸ‡·", "+385"),
        Country("ba", "Bosnia and Herzegovina", "ğŸ‡§ğŸ‡¦", "+387"),
        Country("rs", "Serbia", "ğŸ‡·ğŸ‡¸", "+381"),
        Country("me", "Montenegro", "ğŸ‡²ğŸ‡ª", "+382"),
        Country("al", "Albania", "ğŸ‡¦ğŸ‡±", "+355"),
        Country("mk", "North Macedonia", "ğŸ‡²ğŸ‡°", "+389"),
        Country("si", "Slovenia", "ğŸ‡¸ğŸ‡®", "+386"),
        Country("xk", "Kosovo", "ğŸ‡½ğŸ‡°", "+383"),
        Country("li", "Liechtenstein", "ğŸ‡±ğŸ‡®", "+423"),
        Country("ch", "Switzerland", "ğŸ‡¨ğŸ‡­", "+41"),
        Country("lu", "Luxembourg", "ğŸ‡±ğŸ‡º", "+352"),
        Country("mt", "Malta", "ğŸ‡²ğŸ‡¹", "+356"),
        Country("is", "Iceland", "ğŸ‡®ğŸ‡¸", "+354"),
        Country("fo", "Faroe Islands", "ğŸ‡«ğŸ‡´", "+298"),
        Country("gl", "Greenland", "ğŸ‡¬ğŸ‡±", "+299"),
        Country("gi", "Gibraltar", "ğŸ‡¬ğŸ‡®", "+350"),
        Country("ad", "Andorra", "ğŸ‡¦ğŸ‡©", "+376"),
    )

    fun getAll(): List<Country> = countries
    fun getCountryByIsoCode(isoCode: String): Country? = countries.find { it.isoCode == isoCode }
}
